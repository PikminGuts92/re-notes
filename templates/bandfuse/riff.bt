#ifndef BANDFUSE_RIFF
#define BANDFUSE_RIFF

#include "common.bt"
#include "constants.bt"
#include "crc64.bt"
//#include "string_manager.bt"
#include "string_table.bt"
#include "zobject.bt"

BigEndian();
init_string_tables();

local uint64 CURRENT_OBJECT_PATH = 0;
local uint64 CURRENT_STRING_TABLE_KEY = 0;

typedef struct
{
    HKey_Empty path;
    uint offset;
    uint always_0<hidden=true>;
} IndxEntry;

typedef struct
{
    ChunkInfo chunk_info;

    uint entries_count;
    Offset entries_offset; // Always 4

    if (entries_count <= 0) return;

    IndxEntry entries[entries_count];
} Indx<read=Str("%d entries", this.entries_count)>;

typedef struct
{
    ChunkInfo chunk_info;
    
    local string chunk_magic = ReadString(FTell(), 4);
    local uint i;
    
    if (chunk_magic != MAGIC_INDX)
    {
        return;
    }
    
    struct Chunks
    {
        Indx index;
        if (!exists(index.entries)) return;

        // Read string tables first
        for (i = 0; i < index.entries_count; i++)
        {
            FSeek(index.entries[i].offset);
            chunk_magic = ReadString(FTell(), 4);

            switch (chunk_magic)
            {
                case MAGIC_STBL:
                    StringTable string_tables;
                    break;
            }
        }
        
        // Read objects
        for (i = 0; i < index.entries_count; i++)
        {
            FSeek(index.entries[i].offset);
            chunk_magic = ReadString(FTell(), 4);

            switch (chunk_magic)
            {
                case MAGIC_ZOBJ:
                    CURRENT_OBJECT_PATH = index.entries[i].path.value;
                    
                    // Catalog2 uses full path
                    CURRENT_STRING_TABLE_KEY = compute_crc64_from_string_with_initial(".stringTable@enUS", CURRENT_OBJECT_PATH, true);
                    
                    if (!string_table_exists(CURRENT_STRING_TABLE_KEY))
                    {
                        // Fallback to dir path if not found
                        CURRENT_OBJECT_PATH = ReadUInt64(FTell() + 16);
                        CURRENT_STRING_TABLE_KEY = compute_crc64_from_string_with_initial(".stringTable@enUS", CURRENT_OBJECT_PATH, true);
                    }
                    else
                    {
                        Printf("Using full path for string table\n");
                    }
                
                    ZObject objects;
                    break;
            }
        }
    } chunks;
} RiffFile;

RiffFile file;

//add_or_update_string(0, "");

#endif