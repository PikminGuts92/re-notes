#ifndef BANDFUSE_RIFF
#define BANDFUSE_RIFF

#include "common.bt"
#include "constants.bt"
#include "crc64.bt"
//#include "string_manager.bt"
#include "string_table.bt"
#include "zobject.bt"

BigEndian();

typedef struct
{
    HKey path;
    uint offset;
    uint always_0<hidden=true>;
} IndxEntry;

typedef struct
{
    ChunkInfo chunk_info;

    uint entries_count;
    Offset entries_offset; // Always 4

    if (entries_count <= 0) return;

    IndxEntry entries[entries_count];
} Indx;

typedef struct
{
    ChunkInfo chunk_info;
    Indx index;

    if (!exists(index.entries)) return;

    struct Chunks
    {
        local uint i;
        local string chunk_magic;

        for (i = 0; i < index.entries_count; i++)
        {
            FSeek(index.entries[i].offset);
            chunk_magic = ReadString(FTell(), 4);

            switch (chunk_magic)
            {
                case MAGIC_STBL:
                    StringTable string_tables;
                    break;
                case MAGIC_ZOBJ:
                    ZObject objects;
                    break;
            }
        }
    } chunks;
} RiffFile;

RiffFile file;

//add_or_update_string(0, "");

#endif