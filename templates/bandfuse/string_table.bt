#ifndef BANDFUSE_STRING_TABLE
#define BANDFUSE_STRING_TABLE

#include "common.bt"
#include "constants.bt"

typedef struct
{
    HKey path;
    uint offset;
    uint always_0<hidden=true>;

    local uint str_offset = parentof(this).blob_offset.abs_pos + offset;
    local string str_value = ReadString(str_offset);
    
    // Update string value + path key
    add_string_to_table(parentof(this).header.file_path.value, path.value, str_value);
    path.str_value = str_value;
} StringTableEntry<read=Str("%s", this.str_value)>;

typedef struct
{
    // File name: object_path + . + string_table_type (ex: catalog2.stringTable@enUS)
    // Localizations: enUS, jaJP, deDE, itIT, esES, frFR
    ChunkInfo chunk_info;
    ZObjectHeader header;

    uint entries_count;
    Offset entries_offset; // Always 12

    uint blob_size;
    Offset blob_offset;

    StringTableEntry entries[entries_count]<optimize=false>;
    byte blob[blob_size];
    
    // Update string table path keys
    CURRENT_STRING_TABLE_KEY = header.file_path.value;
    update_hkey(header.file_path);
    update_hkey(header.dir_path);
    update_hkey(header.file_type);
} StringTable<read=this.header.file_path.str_value>;

#endif