// C++ Class: SampleData

#ifndef IN_MILO_FILE
    #ifndef STANDALONE_FILE
        #define STANDALONE_FILE "SampleData"
    #endif
#endif

#ifndef OBJECT_SAMPLE_DATA
#define OBJECT_SAMPLE_DATA

#include "common.bt"

/*
XMA Info:
https://github.com/hrydgard/minidx9/blob/master/Include/xma2defs.h
https://github.com/FFmpeg/FFmpeg/blob/master/libavcodec/wmaprodec.c
*/

typedef struct (SystemInfo& info)
{
    int version; // 11 (GH2 4-song/GH2/GH2 360/RB2), 13 (TBRB/GDRB) 14 (RB3)

    // 1 = Uncompressed 16-bit PCM
    // 2 =  ??? (PS2)
    // 3 =  ??? (360) Probably XMA... padded in 2048-sized blocks
    // 5 = MSFC (PS3)
    // 5|6 =  ??? (Wii)
    int encoding;

    int sample_count; // Will be half of samples_size if encoding is 1
    int sample_rate;  // PS2 usually 16kHz (Also observed: 22.05kHz), 360 usually 44.1kHz
    int samples_size;

    Bool read_samples; // game will only read samples if this is true, otherwise it will just act like sample byte array is empty

    if (samples_size > 0) byte samples[samples_size];

    if(version >= 14)
    {
        int unk_int;
    }
} SampleData;


#ifdef STANDALONE_FILE

if (STANDALONE_FILE == "SampleData")
{
    local int obj_version = guess_version();
    local SystemInfo info;
    info.version = 25;

    if (IsBigEndian())
    {
        info.platform = X360;
    }
    else
    {
        info.platform = PS2;
    }

    SampleData sample_data(info);
}

#endif


#endif