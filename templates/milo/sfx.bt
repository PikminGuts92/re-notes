// Basic sound effect object.  Plays several samples with a given volume, pan, transpose, and envelope settings.
// Super: Sfx
// Ext: .cue
// C++ Class: Sfx

#ifndef IN_MILO_FILE
    #ifndef STANDALONE_FILE
        #define STANDALONE_FILE "Sfx"
    #endif
#endif

#ifndef OBJECT_SFX
#define OBJECT_SFX

#include "common.bt"
#include "group_seq.bt"
#include "draw.bt"

typedef enum <int> {
    kAttackLinear = 0,
    kAttackExp = 1,
} AttackMode;

typedef enum <int> {
    kSustainLinInc = 0,
    kSustainLinDec = 2,
    kSustainExpInc = 4,
    kSustainExpDec = 6,
} SustainMode;

typedef enum <int> {
    kReleaseLinear = 0,
    kReleaseExp = 1,
} ReleaseMode;

typedef struct
{
    int version; // 1 (RB3)
    float sustain_level;
    float release_rate;
    float sustain_rate;
    float decay_rate;
    float attack_rate;
    ReleaseMode release_mode;
    SustainMode sustain_mode;
    AttackMode attack_mode;
} ADSR;

typedef enum <int>
{
    kFXCoreNone = -1,
    kFXCore0 = 0,
    kFXCore1 = 1
} FXCore;

// SfxMap version is the same as parent Sfx version, so we need to pass it through
typedef struct(int version)
{
    NumString sample_name;
    if(2 < version)
    {
        float volume;
        float pan;
        float transpose;
        FXCore fx;
        if(3 < version)
        {
            ADSR adsr;
        }
    }
} SfxMap;

typedef struct
{
    int version; // 0 is only version that seems to exist
    
    int faders_count;
    NumString faders[faders_count]<optimize=false>;
} FaderGroup;

typedef struct (SystemInfo& info, Bool super)
{
    int version; // 9 (RB2/TBRB/GDRB), 12 (RB3)

    if(version < 6)
    {
        if(1 < version)
        {
            read_metadata(info, super);
        }
    }
    else
    {
        Sequence sequence(info, super);
    }

    int sfxmap_count;
    SfxMap sfx_maps(version)[sfxmap_count]<optimize=false>;

    if(9 < version)
    {
        int mogg_clip_count;
        NumString mogg_clips[mogg_clip_count]<optimize=false>;
    }

    if(4 < version)
    {
        NumString send_obj;
    }

    if(8 < version)
    {
        FaderGroup fader_group;
    }

    if(version > 0xb)
    {
        float unk;
        Bool unk_bool;
    }


} Sfx;

#ifdef STANDALONE_FILE

if (STANDALONE_FILE == "Sfx")
{
    local int obj_version = guess_version();
    local SystemInfo info;
    info.version = 25;

    if (IsBigEndian())
    {
        info.platform = X360;
    }
    else
    {
        info.platform = PS2;
    }

    Sfx sfx(info, False);
}

#endif

#endif