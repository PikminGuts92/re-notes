// Base class for transformable objects.
// Trans objects have a 3D position, rotation, and scale.
// Super: (None)
// Ext: .trans, .mesh
// C++ Class: RndTransformable

#ifndef IN_MILO_FILE
    #ifndef STANDALONE_FILE
        #define STANDALONE_FILE "Trans"
    #endif
#endif

#ifndef OBJECT_TRANS
#define OBJECT_TRANS

#include "common.bt"

typedef enum
{
    kConstraintNone,
    kConstraintLocalRotate,
    kConstraintParentWorld,
    kConstraintLookAtTarget,
    kConstraintShadowTarget,
    kConstraintBillboardZ,
    kConstraintBillboardXZ,
    kConstraintBillboardXYZ,
    kConstraintFastBillboardXYZ
} CONSTRAINT_ENUM;

typedef struct (SystemInfo& info, Bool super)
{
    int version; // 8 (GH1), 9 (RB1/TBRB/GDRB)
    read_metadata(info, super);

    Matrix localXfm;
    Matrix worldXfm;

    if (version <= 8)
    {
        // GH1 and before
        int trans_count;
        NumString trans_objects[trans_count]<optimize=false>; // Trans types? 
    }

    CONSTRAINT_ENUM constraint; // Trans constraint for the object (Constraint + target are used together)
    NumString target;           // Target according to the constraint

    Bool preserve_scale;        // Preserve scale if applying dynamic constraint (usually false)
    NumString parent;    // Object this is linked to
} Trans;


#ifdef STANDALONE_FILE

if (STANDALONE_FILE == "Trans")
{
    local int obj_version = guess_version();
    local SystemInfo info;
    info.version = 25;

    if (IsBigEndian())
    {
        info.platform = X360;
    }
    else
    {
        info.platform = PS2;
    }

    Trans trans(info, False);
}

#endif


#endif